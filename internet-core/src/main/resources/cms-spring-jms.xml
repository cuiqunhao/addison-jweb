<?xml version="1.0" encoding="UTF-8"?>
<beans
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="
	http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
	http://www.springframework.org/schema/context 
	http://www.springframework.org/schema/context/spring-context-3.1.xsd
	http://www.springframework.org/schema/mvc 
	http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd">
	
	<!-- 可以产生Connection的ConnectionFactory，由对应的 JMS服务厂商提供--> 
	<bean id="targetConnectionFactory" class="org.apache.activemq.ActiveMQConnectionFactory">  
	    <property name="brokerURL" value="vm://localhost:61616"/>  
	</bean> 
	
	<!-- Spring用于管理真正的ConnectionFactory的ConnectionFactory -->  
	<bean id="connectionFactory" class="org.springframework.jms.connection.SingleConnectionFactory">
		<!-- 目标ConnectionFactory对应真实的可以产生JMS Connection的ConnectionFactory -->  
    	<property name="targetConnectionFactory" ref="targetConnectionFactory"/>  
	</bean>
	
	<!-- Spring提供的JMS工具类，它可以进行消息发送、接收等 -->  
	<bean id="jmsTemplate" class="org.springframework.jms.core.JmsTemplate">  
	    <!-- 这个connectionFactory对应的是我们定义的Spring提供的那个ConnectionFactory对象 -->  
	    <property name="connectionFactory" ref="connectionFactory"/>  
	</bean>
	
	
	<!--队列目的地，点对点的-->  
	<bean id="queueDestination" name="queueDestination" class="org.apache.activemq.command.ActiveMQQueue">  
	    <constructor-arg value="queue" />  
	        <!-- <value>queue</value>  
	    </constructor-arg>   -->
	</bean>  
	
	<!--主题目的地，一对多的-->  
	<bean id="topicDestination" class="org.apache.activemq.command.ActiveMQTopic">  
	    <constructor-arg value="topic"/>  
	</bean> 
	
	<!-- 消息监听器 ，类方法继承最原始的MessageListener，只能接收消息-->  
	<bean id="consumerMessageListener" class="com.internet.cms.service.jms.JMSConsumerMessageListener"/>     
	
	<!-- 消息监听容器 -->  
	<bean id="jmsContainer"  class="org.springframework.jms.listener.DefaultMessageListenerContainer">  
	    <property name="connectionFactory" ref="connectionFactory" />  
	    <property name="destination" ref="queueDestination" />  
	    <property name="messageListener" ref="consumerMessageListener" />  
	</bean>  
	
	
	<!--这个是sessionAwareQueue目的地-->  
    <bean id="sessionAwareQueue" class="org.apache.activemq.command.ActiveMQQueue">  
        <constructor-arg value="sessionAwareQueue">  
           <!--  <value>sessionAwareQueue</value>   -->
        </constructor-arg>  
    </bean>
	
	<!-- 可以获取session的MessageListener -->  
    <bean id="consumerSessionAwareMessageListener" class="com.internet.cms.service.jms.JMSConsumerSessionAwareMessageListener">  
      <!--   <property name="destination" ref="queueDestination"/>   -->
    </bean>
    
    <bean id="sessionAwareListenerContainer"  
        class="org.springframework.jms.listener.DefaultMessageListenerContainer">  
        <property name="connectionFactory" ref="connectionFactory" />  
        <property name="destination" ref="sessionAwareQueue" />  
        <property name="messageListener" ref="consumerSessionAwareMessageListener" />  
    </bean>  
    
    <!-- 以下配置消息监听适配器， 这种监听方式可以将消息传递给普通的java类使用，并且可以自动返回消息 -->
    
    <!-- 消息监听适配器 -->  
	<bean id="messageListenerAdapter" class="org.springframework.jms.listener.adapter.MessageListenerAdapter">  
	    <!-- <constructor-arg>  
	        <bean class="com.tiantian.springintejms.listener.ConsumerListener"/>  
	    </constructor-arg> -->  
	    <property name="delegate">  
	        <bean class="com.internet.cms.service.jms.JMSConsumerMessageListenerAdapter"/>  
	    </property>  
	    <property name="defaultListenerMethod" value="receiveMessage"/>  
	    <property name="defaultResponseDestination" ref="defaultResponseQueue"/>  
	</bean>
	
	<!--这个adapterQueue是队列目的地，点对点的-->  
	<bean id="adapterQueue" name="adapterQueue" class="org.apache.activemq.command.ActiveMQQueue">  
	    <constructor-arg value="adapterQueue" />  
	        <!-- <value>queue</value>  
	    </constructor-arg>   -->
	</bean> 
	
	<!-- 消息监听适配器对应的监听容器 -->  
	<bean id="messageListenerAdapterContainer" class="org.springframework.jms.listener.DefaultMessageListenerContainer">  
	    <property name="connectionFactory" ref="connectionFactory"/>  
	    <property name="destination" ref="adapterQueue"/>  
	    <property name="messageListener" ref="messageListenerAdapter"/><!-- 使用MessageListenerAdapter来作为消息监听器 -->  
	</bean> 
	
	<!-- defaultResponseQueue默认的消息回复队列 -->  
	<bean id="defaultResponseQueue" class="org.apache.activemq.command.ActiveMQQueue">  
	    <constructor-arg>  
	        <value>defaultResponseQueue</value>  
	    </constructor-arg>  
	</bean>
	
	<!-- defaultResponseQueue对应的监听器 -->  
	<bean id="defaultResponseQueueListener" class="com.internet.cms.service.jms.JMSDefaultResponseQueueListener"/>  
	  
	<!-- defaultResponseQueue对应的监听容器 -->  
	<bean id="defaultResponseQueueMessageListenerContainer" class="org.springframework.jms.listener.DefaultMessageListenerContainer">  
	    <property name="connectionFactory" ref="connectionFactory"/>  
	    <property name="destination" ref="defaultResponseQueue"/>  
	    <property name="messageListener" ref="defaultResponseQueueListener"/>  
	</bean> 
</beans>